# ===================================================================
# XMRT-Ecosystem Enhanced Configuration Template
# Copy this file to .env and configure your actual values
# ===================================================================

# ===== CORE APPLICATION SETTINGS =====
SECRET_KEY=your-super-secret-key-change-this-in-production
FLASK_DEBUG=false
HOST=0.0.0.0
PORT=5000

# ===== FEATURE ACTIVATION FLAGS =====
# Set to 'true' to enable each system component
AUTONOMOUS_LEARNING_ENABLED=true
MULTI_AGENT_ENABLED=true
GITHUB_INTEGRATION_ENABLED=true
MEMORY_SYSTEM_ENABLED=true

# ===== AI API CONFIGURATIONS =====
# OpenAI Configuration (GPT-4, GPT-3.5-turbo)
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=2000

# Google Gemini Configuration
GEMINI_API_KEY=your-gemini-api-key-here
GEMINI_MODEL=gemini-pro

# Anthropic Claude Configuration
ANTHROPIC_API_KEY=your-anthropic-api-key-here
ANTHROPIC_MODEL=claude-3-sonnet-20240229

# ===== GITHUB INTEGRATION SETTINGS =====
GITHUB_TOKEN=ghp_your-github-personal-access-token
GITHUB_OWNER=DevGruGold
GITHUB_REPO=XMRT-Ecosystem
GITHUB_WEBHOOK_SECRET=your-webhook-secret-for-security
AUTO_DEPLOY=true

# ===== MEMORY SYSTEM CONFIGURATION =====
# Supabase Database Configuration
SUPABASE_URL=https://your-project-ref.supabase.co
SUPABASE_KEY=your-supabase-anon-key
MEMORY_RETENTION_DAYS=30
MAX_MEMORY_ENTRIES=10000

# ===== AUTONOMOUS LEARNING PARAMETERS =====
LEARNING_RATE=0.1
ADAPTATION_THRESHOLD=0.8
AUTO_IMPROVEMENT=true
LEARNING_CYCLE_INTERVAL=3600  # seconds (1 hour)

# ===== MULTI-AGENT SYSTEM SETTINGS =====
MAX_AGENTS=5
AGENT_COORDINATION_ENABLED=true
AGENT_SPAWN_COOLDOWN=60  # seconds
AGENT_MAX_MEMORY_SIZE=1000  # MB

# ===== DATABASE CONFIGURATIONS =====
# PostgreSQL (if using instead of/alongside Supabase)
DATABASE_URL=postgresql://user:password@localhost:5432/xmrt_ecosystem
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30

# Redis (for caching and message queuing)
REDIS_URL=redis://localhost:6379/0
REDIS_MAX_CONNECTIONS=20

# ===== SECURITY SETTINGS =====
CORS_ORIGINS=*
MAX_CONTENT_LENGTH=16777216  # 16MB in bytes
UPLOAD_FOLDER=./uploads
SESSION_TIMEOUT=3600  # seconds

# ===== MONITORING AND LOGGING =====
LOG_LEVEL=INFO
LOG_FILE=xmrt_ecosystem.log
SENTRY_DSN=your-sentry-dsn-for-error-tracking
METRICS_ENABLED=true

# ===== BLOCKCHAIN INTEGRATION =====
# Ethereum/Web3 Configuration
WEB3_PROVIDER_URL=https://mainnet.infura.io/v3/your-infura-project-id
PRIVATE_KEY=your-ethereum-private-key-for-transactions
CONTRACT_ADDRESS=0xYourContractAddress
GAS_LIMIT=200000

# ===== EXTERNAL SERVICES =====
# Email Configuration (for notifications)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
EMAIL_FROM=noreply@xmrt-ecosystem.com

# Slack Integration (for notifications)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_CHANNEL=#xmrt-ecosystem

# Discord Integration
DISCORD_BOT_TOKEN=your-discord-bot-token
DISCORD_GUILD_ID=your-discord-server-id
DISCORD_CHANNEL_ID=your-channel-id-for-notifications

# ===== PERFORMANCE TUNING =====
WORKER_PROCESSES=2
WORKER_CLASS=gevent
WORKER_CONNECTIONS=1000
MAX_REQUESTS=1000
MAX_REQUESTS_JITTER=100
TIMEOUT=120

# ===== DEVELOPMENT SETTINGS =====
DEBUG_SQL=false
DEBUG_TEMPLATES=false
TESTING=false
WTF_CSRF_ENABLED=true

# ===== RENDER.COM SPECIFIC SETTINGS =====
# These are automatically set by Render, but you can override them
RENDER=true
RENDER_EXTERNAL_URL=https://your-app-name.onrender.com
RENDER_SERVICE_NAME=xmrt-ecosystem

# ===== ADVANCED FEATURE FLAGS =====
# Experimental features (use with caution)
EXPERIMENTAL_FEATURES=false
ADVANCED_AI_MODELS=false
BLOCKCHAIN_INTERACTIONS=false
REAL_TIME_ANALYTICS=true
AUTOMATED_CODE_GENERATION=false
CROSS_CHAIN_SUPPORT=false

# ===== API RATE LIMITING =====
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000

# ===== BACKUP AND RECOVERY =====
BACKUP_ENABLED=true
BACKUP_INTERVAL=86400  # seconds (24 hours)
BACKUP_RETENTION_DAYS=7
BACKUP_STORAGE_URL=s3://your-backup-bucket/xmrt-ecosystem

# ===================================================================
# IMPORTANT SECURITY NOTES:
# 
# 1. Never commit the actual .env file to version control
# 2. Use strong, unique passwords and API keys
# 3. Rotate API keys regularly
# 4. Use environment-specific configurations
# 5. Enable 2FA on all external services
# 6. Monitor API usage and costs
# 7. Use HTTPS in production
# 8. Regularly update dependencies
# 
# For production deployment:
# - Set FLASK_DEBUG=false
# - Use strong SECRET_KEY (generate with: python -c "import secrets; print(secrets.token_hex(32))")
# - Configure proper database credentials
# - Set up monitoring and alerting
# - Enable backup systems
# - Configure SSL certificates
# ===================================================================
