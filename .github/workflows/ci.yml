name: XMRT-Ecosystem CI Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Main DAO Backend Dependencies
      run: |
        cd backend/xmrt-dao-backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install AI Automation Service Dependencies
      run: |
        cd backend/ai-automation-service
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Cross-Chain Service Dependencies
      run: |
        cd backend/cross-chain-service/xmrt-cross-chain-service
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install ZK Service Dependencies
      run: |
        cd backend/zk-service/xmrt-zk-service
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Backend Linting
      run: |
        pip install flake8 black
        # Main DAO Backend
        cd backend/xmrt-dao-backend
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        black src/ --check --diff
        # AI Automation Service
        cd ../ai-automation-service
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        black . --check --diff
        # Cross-Chain Service
        cd ../cross-chain-service/xmrt-cross-chain-service
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        black . --check --diff
        # ZK Service
        cd ../../zk-service/xmrt-zk-service
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        black . --check --diff

    - name: Run Backend Tests
      run: |
        # Main DAO Backend
        cd backend/xmrt-dao-backend
        python -m pytest
        # AI Automation Service
        cd ../ai-automation-service
        python -m pytest
        # Cross-Chain Service
        cd ../cross-chain-service/xmrt-cross-chain-service
        python -m pytest
        # ZK Service
        cd ../../zk-service/xmrt-zk-service
        python -m pytest

  test-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'

    - name: Install Frontend Dependencies
      run: |
        cd frontend/xmrt-unified-cashdapp
        pnpm install

    - name: Run Frontend Linting
      run: |
        cd frontend/xmrt-unified-cashdapp
        pnpm lint

    - name: Run Frontend Tests
      run: |
        cd frontend/xmrt-unified-cashdapp
        pnpm test

  build-docker-images:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      run: |
        docker build -t devgrugold/xmrt-dao-backend:latest ./backend/xmrt-dao-backend
        docker push devgrugold/xmrt-dao-backend:latest

        docker build -t devgrugold/ai-automation-service:latest ./backend/ai-automation-service
        docker push devgrugold/ai-automation-service:latest

        docker build -t devgrugold/xmrt-cross-chain-service:latest ./backend/cross-chain-service/xmrt-cross-chain-service
        docker push devgrugold/xmrt-cross-chain-service:latest

        docker build -t devgrugold/xmrt-zk-service:latest ./backend/zk-service/xmrt-zk-service
        docker push devgrugold/xmrt-zk-service:latest

        docker build -t devgrugold/xmrt-unified-cashdapp:latest ./frontend/xmrt-unified-cashdapp
        docker push devgrugold/xmrt-unified-cashdapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker-images
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: './frontend/xmrt-unified-cashdapp'


