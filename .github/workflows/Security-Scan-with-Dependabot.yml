
name: Security-Scan-with-Dependabot

on: # Trigger the workflow on push, pull request, and schedule
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '30 1 * * *' # Runs every day at 01:30 UTC

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  code_scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: python # Specify relevant languages, can add others like javascript, go, etc.

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  dependency_review:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Dependency Review
      uses: actions/dependency-review-action@v3
